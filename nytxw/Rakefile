task default: :crosswords

require "logger"
logger = Logger.new(STDOUT)
logger.level = Logger::INFO

require_relative "crosswords"
CROSSWORDS_STORE = "var"

desc "Sync crosswords"
task :crosswords, [:start_date] do |t, args|
  nyt_s = ENV.fetch("NYT_S")

  nyt = Crosswords::NYT.new(nyt_s)
  store = Crosswords::Store.new(CROSSWORDS_STORE)

  args.with_defaults(start_date: store.last_date&.to_s || "2014-05-18")
  start_date = Date.parse(args.start_date)
  (start_date..Date.today).each do |date|
    logger.info "Fetching #{date}"
    store[date] = nyt.fetch(date)
  end

  Rake::Task["#{CROSSWORDS_STORE}/crosswords.json"].invoke
end

namespace :crosswords do
  desc "Perform a full re-sync of crosswords"
  task :full do
    Rake::Task["sync:crosswords"].invoke("2014-05-18")
  end

  crossword_jsons = FileList["#{CROSSWORDS_STORE}/*.json"]
  file "#{CROSSWORDS_STORE}/crosswords.json" => crossword_jsons do |t|
    data = crossword_jsons
      .map {|path| JSON.parse(File.read(path)) }
      .inject {|h, month_data| h.merge(month_data) }
      .map {|date, data|
        {
          date: date,
          revealedCount: data.fetch("board", {}).fetch("cells", []).count {|cell| cell.has_key?("revealed") },
          secondsSpentSolving: data.fetch("calcs", {}).fetch("secondsSpentSolving", nil),
          solved: data.fetch("calcs", {}).fetch("solved", false),
        }
      }

    File.write(t.name, JSON.dump(data))
  end
end
